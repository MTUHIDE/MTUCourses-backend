// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["groupBy"]
}

enum Semester {
  FALL
  SPRING
  SUMMER
}

model Course {
  @@id([year, semester, subject, crse])

  id          String @unique @default(cuid())

  year        Int
  semester    Semester
  subject     String
  crse        String
  title       String
  description String?
  prereqs     String?
  sections    Section[]

  offered     Semester[]

  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  @@index(updatedAt)
  @@index(deletedAt)
}

model Section {
  id             String @id @default(cuid())

  course         Course @relation(fields: [courseId], references: [id])
  courseId       String

  // CRN *is not* unique across semesters
  crn            String
  section        String
  cmp            String

  minCredits     Float
  maxCredits     Float

  // Output of rschedule
  time           Json

  totalSeats     Int
  takenSeats     Int
  availableSeats Int

  // Cents
  fee            Int

  instructors    Instructor[]

  updatedAt      DateTime @updatedAt
  deletedAt      DateTime?

  @@index(updatedAt)
  @@index(deletedAt)
}

model Instructor {
  id                      Int    @id @default(autoincrement())

  // Scraped from Michigan Tech
  fullName                String @unique
  departments             String[]
  email                   String?
  phone                   String?
  office                  String?
  websiteURL              String?
  photoURL                String?
  interests               String[]
  occupations             String[]

  sections                Section[]

  // Scraped from RateMyProfessor
  averageDifficultyRating Float?
  averageRating           Float?
  numRatings              Int?
  rmpId                   String?

  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@index(updatedAt)
  @@index(deletedAt)
}

model PassFailDrop {
  courseSubject String
  courseCrse    String
  year          Int
  semester      Semester
  section       String
  failed        Int
  dropped       Int
  total         Int

  @@id([courseSubject, courseCrse, year, semester, section])
}
